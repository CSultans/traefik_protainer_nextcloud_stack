version: '3.8'

services:
  pgdb:
    image: postgres:15.2-alpine
    container_name: pgdb
    environment:
      - POSTGRES_DB=django_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - djangoNetwork
  pgdbadmin:
    # user: 0:0 # run all the commad inside container as a root user
    container_name: pgdbadmin
    image: dpage/pgadmin4:7.0
    labels:
      traefik.docker.network: "traefik-net"
      traefik.enable: "true"
      traefik.http.routers.pgdbadmin.entrypoints: "https"
      traefik.http.routers.pgdbadmin.middlewares: "default@file"
      traefik.http.routers.pgdbadmin.rule: "Host(`db.t99ltd.info`)"
      traefik.http.routers.pgdbadmin.tls.certresolver: "letsEncrypt"
      traefik.http.routers.pgdbadmin.tls.options: "modern@file"
      traefik.http.routers.pgdbadmin.tls: "true"
      traefik.http.services.pgdbadmin.loadbalancer.server.port: 80
      traefik.http.services.pgdbadmin.loadbalancer.sticky.cookie.httpOnly: "true"
      traefik.http.services.pgdbadmin.loadbalancer.sticky.cookie.secure: "true"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: somepassword
    volumes:
      - ./config/pgadmin/servers.json:/tmp/servers.json
    # ports:
    #   - "5055:80"
    depends_on:
      - pgdb
    networks:
      - djangoNetwork
      - traefik-net
    # load the connections from the servers.json
    # command: /bin/sh -c "python /pgadmin4/setup.py --load-servers /tmp/servers.json"
networks:
  djangoNetwork:
    name: djangoNetwork
    driver: bridge
  traefik-net:
    driver: overlay
    external: true

